
--- 
apiVersion: v1
kind: Template
labels: 
  template: pipeline-ab
metadata: 
  annotations: 
    description: "AB Testing Pipeline for Agile Integration"
    iconClass: icon-jenkins
    tags: "demo,java,springboot,fis,jenkins"
    version: "2.0"
  name: pipeline-ab
objects: 
  - 
    apiVersion: v1
    kind: BuildConfig
    metadata: 
      annotations: 
        pipeline.alpha.openshift.io/uses: "[{\"name\": \"ab-pipeline\",  \"kind\": \"DeploymentConfig\"}]"
      labels: 
        name: ab-pipeline
        template: ab-pipeline
      name: ab-pipeline
    spec: 
      nodeSelector: ~
      output: {}
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source: 
        type: None
      strategy: 
        env: 
          - 
            name: GIT_BRANCH
            value: "${GIT_BRANCH}"
          - 
            name: GIT_REPO
            value: "${GIT_REPO}"
          - 
            name: ANSIBLE_TEST_INVENTORY
            value: "${ANSIBLE_TEST_INVENTORY}"
          - 
            name: ANSIBLE_PROD_INVENTORY
            value: "${ANSIBLE_PROD_INVENTORY}"
          - 
            name: ANSIBLE_JOB_TEMPLATE
            value: "${ANSIBLE_JOB_TEMPLATE}"
          - 
            name: ANSIBLE_TOWER_SERVER
            value: "${ANSIBLE_TOWER_SERVER}"
          - 
            name: OPENSHIFT_SERVICE_NAME
            value: "${OPENSHIFT_SERVICE_NAME}"
          - 
            name: OPENSHIFT_IMAGE_STREAM
            value: "${OPENSHIFT_IMAGE_STREAM}"
          - 
            name: OPENSHIFT_BUILD_CONFIG
            value: "${OPENSHIFT_BUILD_CONFIG}"
          - 
            name: OPENSHIFT_BUILD_PROJECT
            value: "${OPENSHIFT_BUILD_PROJECT}"
          - 
            name: OPENSHIFT_TEST_ENVIRONMENT
            value: "${OPENSHIFT_TEST_ENVIRONMENT}"
          - 
            name: OPENSHIFT_PROD_ENVIRONMENT
            value: "${OPENSHIFT_PROD_ENVIRONMENT}"
          - 
            name: OPENSHIFT_DEPLOYMENT_CONFIG
            value: "${OPENSHIFT_DEPLOYMENT_CONFIG}"
          - 
            name: MICROCKS_SERVER_URL
            value: "${MICROCKS_SERVER_URL}"
          - 
            name: MICROCKS_SERVICE_ID
            value: "${MICROCKS_SERVICE_ID}"
          - 
            jenkinsfile: |-
                node('maven') {
                  env.threescaleurl = "${THREESCALE_URL}";    
                  env.apiaccesstoken = "${API_TOKEN}";    
                  env.appplanid = "${APP_PLAN_ID}";
                  env.metricsid = "${METRICS_ID}";
                  env.ablimit = ${API_LIMITS};
                  
                  
                  env.uatnamespace = "${UAT_PROJECT_NAMESPACE}";
                  env.prodnamespace = "${PROD_PROJECT_NAMESPACE}";
                  
                  stage('moveToProd'){
                    echo "UAT at ${env.uatnamespace} and PROD at ${env.prodnamespace}"
                    openshiftTag alias: "false",  destStream: "fisgateway-service", destTag: "latest", destinationNamespace: "${env.prodnamespace}", namespace: "${env.uatnamespace}", srcStream: "fisgateway-service-uat", srcTag: "uatready", verbose: "true"
                  }
                  
                  stage('StartNewServices') {
                    print 'Start new service with one pod running' 
                    openshiftScale depCfg: "fisgateway-service-new", namespace: "${env.prodnamespace}", replicaCount: "1", verifyReplicaCount: "true", verbose: "true"
                  }
                  
                  stage('UpdateRouteToAB') { 
                    print 'deleteroute' 
                    openshiftDeleteResourceByKey keys: "fisgateway-service", namespace: "${env.prodnamespace}", types: "route", verbose: "true"
                    
                    print 'Update Route to only point to both new and stable service' 
                    openshiftCreateResource jsonyaml: "{    'apiVersion': 'v1',    'kind': 'Route',    'metadata': {        'labels': {            'component': 'fisgateway-service-stable',            'group': 'quickstarts',            'project': 'fisgateway-service-stable',            'provider': 's2i',            'template': 'fisgateway-service',            'version': '1.0.0'        },        'name': 'fisgateway-service',        'namespace': '${env.prodnamespace}'    },    'spec': {        'alternateBackends': [            {                'kind': 'Service',                'name': 'fisgateway-service-new',                'weight': 30            }        ],        'host': 'fisgateway-service-${env.prodnamespace}.${OPENSHIFT_HOST}',        'to': {            'kind': 'Service',            'name': 'fisgateway-service-stable',            'weight': 70        },        'wildcardPolicy': 'None'    }}", namespace: "${env.prodnamespace}", verbose: "false"
                  }
                  
                  stage('GetCurrentLimitId') { 
                    print 'Get Current Limit Id'
                    env.LIMIT_ID = sh (
                      script: "curl --silent -X GET \"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits.xml?access_token=${env.apiaccesstoken}\" --stderr - | sed -e 's,.*<id>\\([^<]*\\)</id>.*,\\1,g' ", 
                      returnStdout: true
                    ).trim()
                    echo env.LIMIT_ID
                  }
                  
                  stage('UpdateLimitToAB') { 
                    print 'Update 3scale Limit back to AB Testing mode'  
                    sh  "echo Updating Id ${env.LIMIT_ID} to less request ${env.ablimit} per min because of AB Testing"
                    sh  "curl -s -o /dev/null -w \"%{http_code}\\n\" -X PUT  \"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits/${env.LIMIT_ID}.xml\" -d \'access_token=${env.apiaccesstoken}&period=minute&value=${env.ablimit}\'"  
                  }
                }
            name: MICROCKS_TEST_ENDPOINT
            value: "${MICROCKS_TEST_ENDPOINT}"
        jenkinsPipelineStrategy: ~
        type: JenkinsPipeline
      triggers: 
        - 
          github: 
            secret: secret101
          type: GitHub
        - 
          generic: 
            secret: secret101
          type: Generic
parameters: 
  - 
    name: GIT_REPO
    required: true
    value: "https://github.com/nmasse-itix/rhte-api.git"
  - 
    name: GIT_BRANCH
    required: true
    value: master
  - 
    name: ANSIBLE_TEST_INVENTORY
    required: true
    value: 3scale-test
  - 
    name: ANSIBLE_PROD_INVENTORY
    required: true
    value: 3scale-prod
  - 
    name: ANSIBLE_JOB_TEMPLATE
    required: true
    value: "Deploy an API to 3scale"
  - 
    name: ANSIBLE_TOWER_SERVER
    required: true
    value: tower
  - 
    name: OPENSHIFT_SERVICE_NAME
    required: true
    value: rhte-api
  - 
    name: OPENSHIFT_IMAGE_STREAM
    required: true
    value: rhte-api
  - 
    name: OPENSHIFT_BUILD_CONFIG
    required: true
    value: rhte-api
  - 
    name: OPENSHIFT_BUILD_PROJECT
    required: true
    value: rhte-build
  - 
    name: OPENSHIFT_TEST_ENVIRONMENT
    required: true
    value: rhte-test
  - 
    name: OPENSHIFT_PROD_ENVIRONMENT
    required: true
    value: rhte-prod
  - 
    name: OPENSHIFT_DEPLOYMENT_CONFIG
    required: true
    value: rhte-api
  - 
    name: MICROCKS_SERVER_URL
    required: true
    value: "http://microcks:8080/api"
  - 
    name: MICROCKS_SERVICE_ID
    required: true
    value: "RedHat-Event-API:1.1"
  - 
    name: MICROCKS_TEST_ENDPOINT
    required: true
  - 
    description: "The UAT project namespace"
    displayName: "UAT project namespace"
    name: UAT_PROJECT_NAMESPACE
    required: true
    value: fisdemo
  - 
    description: "The Production project namespace"
    displayName: "Production project namespace"
    name: PROD_PROJECT_NAMESPACE
    required: true
    value: fisdemoprod
  - 
    description: "Admin URL of Threescale"
    displayName: "Admin URL of Threescale"
    name: THREESCALE_URL
    required: true
    value: "https://fusedemo-admin.3scale.net"
  - 
    description: "Access token from 3scale for calling management API"
    displayName: "Access token from 3scale"
    name: API_TOKEN
    required: true
    value: 143d1a90ea5d369a88ec35310f06b86fec8569a1c34c21eaffc9f9906947962a
  - 
    description: "Application plan ID for accessing your APIs on threescale"
    displayName: "Application plan ID in threescale"
    name: APP_PLAN_ID
    required: true
    value: "2357355891901"
  - 
    description: "The metrics ID in 3scale"
    displayName: "Metrics ID in 3scale"
    name: METRICS_ID
    required: true
    value: "2555417998898"
  - 
    description: "Number of APIs call limits per min setting in 3scale"
    displayName: "Number of APIs call limits per min"
    name: API_LIMITS
    required: true
    value: "25"
  - 
    description: "Name of your OpenShift Host"
    displayName: "Name of your OpenShift Host"
    name: OPENSHIFT_HOST
    required: true
    value: apps.mkt2go.com
